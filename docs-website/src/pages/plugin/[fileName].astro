---
import { readdir, readFile } from 'fs/promises';
import path from 'path';
import { Prism } from '@astrojs/prism';
import * as marked from 'marked';
import {Content as Template} from './plugin-template.mdx';
import { fileURLToPath } from 'url';
export async function getStaticPaths() {
  const __filename = fileURLToPath(import.meta.url);
  const __dirname = path.dirname(__filename);
  const packagesDirRelativeLocation = '../../../../packages';
  const getDirectories = async (source: string) =>
    (await readdir(path.join(__dirname, source), { withFileTypes: true }))
      .filter((dirent) => dirent.isDirectory())
      .map((dirent) => dirent.name);
  const response = await getDirectories(packagesDirRelativeLocation);
  return response.map((f) => {
    return { params: { fileName: f } };
  });
}
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const { fileName } = Astro.params;
const packagesDirRelativeLocation = '../../../../packages';
let packageJsonFile;
let parsedReadmeFile;
if(fileName){
  try{
    packageJsonFile= JSON.parse(await readFile( path.join(__dirname, 
     packagesDirRelativeLocation, fileName, 'package.json'),'utf-8'))
     parsedReadmeFile= marked.parse(await readFile( path.join(__dirname, 
   packagesDirRelativeLocation, fileName, 'README.md'),'utf-8'))
  }catch(e){
    console.log(e)
  }
}
---
<!doctype html>
<html>
<head>
  <meta charset="utf-8"/>
  <title>{packageJsonFile.name}</title>
</head>
<body>
  <Template/>
  <!-- <highlightjs autodetect :code={parsedReadmeFile} /> -->
  <!-- <Prism code={parsedReadmeFile} > -->
    <div id="content" set:html={parsedReadmeFile}></div>
  <!-- </Prism> -->
</body>
</html>